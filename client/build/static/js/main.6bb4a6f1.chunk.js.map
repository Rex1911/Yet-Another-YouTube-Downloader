{"version":3,"sources":["Components/Header.js","Components/Cockpit.js","Components/Result.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Typography_default","align","component","variant","color","style","marginBottom","gutterBottom","Cockpit","props","id","TextField_default","value","val","label","margin","fullWidth","onChange","change","error","Button_default","onClick","click","Result","Card_default","CardActionArea_default","CardMedia_default","alt","height","image","img","title","width","CardContent_default","author","display","marginRight","index_es","selectedQuality","availableQuality","map","quality","key","itag","url","resolution","container","CardActions_default","size","App","state","showResult","handleChange","event","_this","setState","target","handleSearch","data","videoUrl","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","err","name","thumbnail_url","video_url","formats","filter","format","catch","handleQualityChange","handleDownloadClick","window","location","result","this","CircularProgress_default","marginTop","_this$state","className","Component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bb4a6f1.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default () => {\n  return (\n    <div>\n      <Typography\n        align=\"center\"\n        component=\"h2\"\n        variant=\"h1\"\n        color=\"secondary\"\n        style={{ marginBottom: 0 }}\n        gutterBottom\n      >\n        YAYTD\n      </Typography>\n      <Typography\n        variant=\"overline\"\n        color=\"secondary\"\n        align=\"center\"\n        gutterBottom\n      >\n        YET ANOTHER YOUTUBE DOWNLOADER\n      </Typography>\n    </div>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from '@material-ui/core/Typography';\n\nexport default props => (\n  <div id=\"cockpit-container\">\n    <TextField\n      id=\"url-input\"\n      value={props.val}\n      label=\"URL\"\n      margin=\"normal\"\n      variant=\"outlined\"\n      fullWidth={true}\n      onChange={props.change}\n    />\n    {props.error ? <Typography color=\"secondary\">\n      Something went wrong, please try again\n    </Typography> : null}\n    <Button\n      onClick={props.click}\n      id=\"search-button\"\n      variant=\"contained\"\n      color=\"secondary\"\n    >\n      Search\n    </Button>\n  </div>\n);","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Select, MenuItem } from \"@material-ui/core\";\n\nexport default props => (\n  <div id=\"result-container\">\n    <Card>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image={props.img}\n          title={props.title}\n          style={{width:\"50%\",margin:\"auto\"}}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Video Information\n          </Typography>\n          <Typography component=\"p\"><strong>Title:</strong> {props.title}</Typography>\n          <Typography component=\"p\"><strong>Author:</strong> {props.author}</Typography>\n          <Typography component=\"p\" style={{display:\"inline\",marginRight:10}}><strong>Quality:</strong></Typography>\n          <Select value={props.selectedQuality} onChange={props.change}>\n            {props.availableQuality.map(quality => <MenuItem key={quality.itag} value={quality.url}>{quality.resolution}/{quality.container}</MenuItem>)}\n          </Select>\n        </CardContent>\n      </CardActionArea>\n      <CardActions id=\"card-action\">\n        <Button size=\"small\" color=\"secondary\" onClick={props.click}>\n          Download\n        </Button>\n      </CardActions>\n    </Card>\n  </div>\n);\n","import React, { Component } from \"react\";\nimport Header from \"./Components/Header\";\nimport Cockpit from \"./Components/Cockpit\";\nimport Result from \"./Components/Result\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport \"./index.css\";\n\nclass App extends Component {\n  state = {\n    showResult: 0,  // 0-Hide   1-Loading Data   2-Data is ready  3-Error\n    value: null,\n    title: null,\n    author:null,\n    img: null,\n    availableQuality:[],\n    selectedQuality: null,\n    url: null\n  };\n\n  handleChange = event => {\n    this.setState({value: event.target.value });\n  };\n\n  handleSearch = event => {\n    this.setState({ showResult: 1 });\n    let data = {\n      videoUrl: this.state.value\n    }\n    fetch(\"/api/getinfo\", {\n      method:\"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\"\n      },\n      body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(response => {\n      if(response.err) {\n        this.setState({showResult: 3})\n      } else {;\n        this.setState({\n          title: response.title,\n          author: response.author.name,\n          img: response.thumbnail_url,\n          url: response.video_url,\n          availableQuality: response.formats.filter(format => format.quality),\n          selectedQuality: response.formats[0].url,\n          showResult: 2\n        })\n      }\n    })\n    .catch(err => {\n      this.setState({showResult: 3})\n    })\n  };\n\n  handleQualityChange = event => {\n    this.setState({\n      selectedQuality: event.target.value\n    })\n  };\n\n  handleDownloadClick = () => window.location = this.state.selectedQuality;\n\n  render() {\n    let result = null;\n    let error = false;\n    if (this.state.showResult === 1) {\n      result = <CircularProgress style={{ marginTop: 50 }} />;\n    } else if (this.state.showResult === 2) {\n      let {title,author,img,url,availableQuality,selectedQuality} = this.state;\n      result = <Result title = {title} author={author} img={img} url={url} availableQuality={availableQuality} selectedQuality={selectedQuality} change={this.handleQualityChange} click={this.handleDownloadClick}/>;\n    } else if(this.state.showResult === 3) {\n      error = true;\n    }\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Cockpit\n          val={this.state.value}\n          change={this.handleChange}\n          click={this.handleSearch}\n          error={error}\n        />\n        {result}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}